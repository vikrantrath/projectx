{"version":3,"sources":["StateManagement/useAppState.js","Components/HeaderComponents/sideDrawer.js","Components/HeaderComponents/searchBox.js","Components/HeaderComponents/login.js","Components/header.js","Components/body.js","Components/footer.js","App.js","serviceWorker.js","index.js"],"names":["AppContext","React","createContext","useAppState","useState","loginStatus","state","setState","actions","useMemo","getActions","login","logout","useAppContext","useContext","useStyles","makeStyles","theme","list","width","hide","display","menuButton","marginRight","spacing","Sidedrawer","props","classes","isOpen","toggleDrawer","event","type","key","IconButton","color","aria-label","onClick","edge","className","clsx","SwipeableDrawer","open","onClose","onOpen","role","onKeyDown","List","SideBarMenu","LoggedIn","LoggedOut","map","text","index","ListItem","button","ListItemIcon","ListItemText","primary","search","position","marginLeft","left","borderRadius","shape","backgroundColor","fade","palette","common","white","searchIcon","height","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","padding","transition","transitions","create","breakpoints","up","Searchbox","InputBase","placeholder","root","input","inputProps","Login","menuId","anchorEl","setAnchorEl","isMenuOpen","Boolean","handleMenuClose","aria-controls","aria-haspopup","currentTarget","anchorOrigin","vertical","horizontal","id","keepMounted","transformOrigin","MenuItem","Button","Header","AppBar","Toolbar","Typography","variant","card","minWidth","bullet","margin","transform","title","fontSize","pos","marginBottom","Bodycomp","bull","Card","CardContent","gutterBottom","component","CardActions","size","flexGrow","maxWidth","indicator","Footer","value","setValue","Tabs","onChange","newValue","textColor","Tab","icon","label","footer","paddingTop","paddingLeft","paddingRight","App","Provider","Grid","container","direction","justify","item","xs","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"wkCAGA,IAAMA,EAAaC,IAAMC,cAAc,IAMjCC,EAAc,WAClB,IADwB,EAIEC,mBAHL,CAAEC,aAAa,IADZ,mBAIjBC,EAJiB,KAIVC,EAJU,KAUxB,MAAO,CAAED,QAAOE,QAFAC,kBAAQ,kBAAMC,EAAWH,IAAW,CAACA,MAQjDG,EAAa,SAAAH,GAAQ,MAAK,CAC9BI,MAAO,WACLJ,EAAS,SAAAD,GAAK,YAAUA,EAAV,CAAiBD,aAAa,OAE9CO,OAAQ,WACNL,EAAS,SAAAD,GAAK,YAAUA,EAAV,CAAiBD,aAAa,SAQ1CQ,EAAgB,WAClB,OAAOC,qBAAWd,I,oOC7BtB,IAAMe,EAAYC,YAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,CACFC,MAAO,KAETC,KAAM,CACJC,QAAS,QAEXC,WAAY,CACVC,YAAaN,EAAMO,QAAQ,OA2DpBC,EAtDI,SAACC,GAChB,IAAMC,EAAUZ,IADQ,EAGEd,IAAMG,SAAS,CACrCwB,QAAS,IAJW,mBAGjBtB,EAHiB,KAGVC,EAHU,KAMlBF,EAAcQ,IAAgBP,MAAMD,YAGlCwB,EAAe,SAACD,GAAD,OAAY,SAAAE,KAC3BA,GAAwB,YAAfA,EAAMC,MAAqC,QAAdD,EAAME,KAA+B,UAAdF,EAAME,MAGvEzB,E,qVAAS,IAAKD,EAAN,CAAasB,OAAQA,OAqB/B,OACI,6BACF,kBAACK,EAAA,EAAD,CACAC,MAAM,UACNC,aAAW,cACXC,QAASP,GAAa,GACtBQ,KAAK,QACLC,UAAWC,YAAKZ,EAAQL,WAAYhB,EAAMsB,QAAUD,EAAQP,OAC3D,kBAAC,IAAD,OACD,kBAACoB,EAAA,EAAD,CACAC,KAAMnC,EAAMsB,OACZc,QAASb,GAAa,GACtBc,OAAQd,GAAa,IA7BrB,yBACES,UAAWX,EAAQT,KACnB0B,KAAK,eACLR,QAASP,GAAa,GACtBgB,UAAWhB,GAAa,IAExB,kBAACiB,EAAA,EAAD,MACIzC,EAAY0C,EAAYC,SAASD,EAAYE,WAAWC,IAAI,SAACC,EAAMC,GAAP,OAC5D,kBAACC,EAAA,EAAD,CAAUC,QAAM,EAACtB,IAAKmB,GACpB,kBAACI,EAAA,EAAD,KAAeH,EAAQ,IAAM,EAAI,kBAAC,IAAD,MAAgB,kBAAC,IAAD,OACjD,kBAACI,EAAA,EAAD,CAAcC,QAASN,Y,kCC7CjCpC,EAAYC,YAAW,SAAAC,GAAK,MAAK,CACnCyC,OAAQ,CACNC,SAAU,WACVC,WAAY,EACZC,KAAK,MACLC,aAAc7C,EAAM8C,MAAMD,aAC1BE,gBAAiBC,YAAKhD,EAAMiD,QAAQC,OAAOC,MAAO,KAClD,UAAW,CACTJ,gBAAiBC,YAAKhD,EAAMiD,QAAQC,OAAOC,MAAO,OAGpDC,WAAY,CACVlD,MAAOF,EAAMO,QAAQ,GACrB8C,OAAQ,OACRX,SAAU,WACVY,cAAe,OACflD,QAAS,OACTmD,WAAY,SACZC,eAAgB,UAElBC,UAAW,CACTxC,MAAO,WAETyC,WAAW,aACTC,QAAS3D,EAAMO,QAAQ,EAAG,EAAG,EAAG,GAChCqD,WAAY5D,EAAM6D,YAAYC,OAAO,SACrC5D,MAAO,QACNF,EAAM+D,YAAYC,GAAG,MAAQ,CAC5B9D,MAAO,IACP,UAAW,CACTA,MAAO,UAuBJ+D,EAjBG,WACd,IAAMvD,EAAUZ,IAChB,OAAQ,yBAAKuB,UAAWX,EAAQ+B,QAChC,yBAAKpB,UAAWX,EAAQ0C,YACtB,kBAAC,IAAD,OAEF,kBAACc,EAAA,EAAD,CACEC,YAAY,eACZzD,QAAS,CACP0D,KAAM1D,EAAQ+C,UACdY,MAAO3D,EAAQgD,YAEjBY,WAAY,CAAE,aAAc,c,4CC9C5BxE,EAAYC,YAAW,SAAAC,GAAK,MAAK,CACnCN,MAAO,CACLgD,SAAW,WACXE,KAAM,UAuDG2B,EAnDD,SAAC9D,GACX,IAAMC,EAAUZ,IACV0E,EAAS,8BAFI,EAGaxF,IAAMG,SAAS,MAH5B,mBAGZsF,EAHY,KAGFC,EAHE,KAIbC,EAAaC,QAAQH,GAJR,EAKK7E,IAAjBP,EALY,EAKZA,MAAME,EALM,EAKNA,QAMX,SAASsF,IACPH,EAAY,MACZnF,EAAQI,SAmBZ,OAAO,yBAAK0B,UAAWX,EAAQhB,OACzBL,EAAMD,YAER,6BACE,kBAAC4B,EAAA,EAAD,CACII,KAAK,MACLF,aAAW,0BACX4D,gBAAeN,EACfO,gBAAc,OACd5D,QAlCV,SAA+BN,GAC3B6D,EAAY7D,EAAMmE,gBAkCZ/D,MAAM,WAER,kBAAC,IAAD,OA1BJ,kBAAC,IAAD,CACEwD,SAAUA,EACVQ,aAAc,CAAEC,SAAU,MAAOC,WAAY,SAC7CC,GAAIZ,EACJa,aAAW,EACXC,gBAAiB,CAAEJ,SAAU,MAAOC,WAAY,SAChD3D,KAAMmD,EACNlD,QAASoD,GAET,kBAACU,EAAA,EAAD,CAAUpE,QAAS0D,GAAnB,YAOF,kBAACW,EAAA,EAAD,CAAQvE,MAAM,UAAUE,QAAS5B,EAAQG,OAAzC,WCrBO+F,EAbA,SAAChF,GAEhB,OAAO,kBAACiF,EAAA,EAAD,CAAQhD,SAAW,YAChB,kBAACiD,EAAA,EAAD,KACA,kBAAC,EAAD,MACA,kBAACC,EAAA,EAAD,CAAYC,QAAQ,MAApB,YAGA,kBAAC,EAAD,MACA,kBAAC,EAAD,S,2BCpBJ/F,EAAYC,YAAW,CACzB+F,KAAM,CACJC,SAAU,KAEZC,OAAQ,CACN5F,QAAS,eACT6F,OAAQ,QACRC,UAAW,cAEbC,MAAO,CACLC,SAAU,IAEZC,IAAK,CACHC,aAAc,MAIL,SAASC,GAAU9F,GAC9B,IAAMC,EAAUZ,IACV0G,EAAO,0BAAMnF,UAAWX,EAAQsF,QAAzB,UACb,OACI,kBAACS,EAAA,EAAD,CAAMpF,UAAWX,EAAQoF,MACvB,kBAACY,EAAA,EAAD,KACE,kBAACd,EAAA,EAAD,CAAYvE,UAAWX,EAAQyF,MAAOlF,MAAM,gBAAgB0F,cAAY,GAAxE,mBAGA,kBAACf,EAAA,EAAD,CAAYC,QAAQ,KAAKe,UAAU,MAAnC,KAEGJ,EAFH,MAIGA,EAJH,IAIUA,EAJV,QAOA,kBAACZ,EAAA,EAAD,CAAYvE,UAAWX,EAAQ2F,IAAKpF,MAAM,iBAA1C,aAGA,kBAAC2E,EAAA,EAAD,CAAYC,QAAQ,QAAQe,UAAU,KAAtC,2BAEE,6BACC,yBAGL,kBAACC,EAAA,EAAD,KACE,kBAACrB,EAAA,EAAD,CAAQsB,KAAK,SAAb,gB,oFCrCNhH,GAAYC,YAAW,CAC3BqE,KAAM,CACJ2C,SAAU,EACVC,SAAU,KAEZC,UAAW,CACTlE,gBAAiB,WA8BNmE,GA1BA,SAACzG,GACd,IAAMC,EAAUZ,KADM,EAEId,IAAMG,SAAS,GAFnB,mBAEfgI,EAFe,KAERC,EAFQ,KAOpB,OAAQ,kBAAC1B,EAAA,EAAD,CAAQhD,SAAW,UAC3B,kBAAC2E,GAAA,EAAD,CACIF,MAAOA,EACPG,SANN,SAAsBzG,EAAO0G,GAC3BH,EAASG,IAML1B,QAAQ,YACR3E,aAAW,0BACXsG,UAAY,UACZ9G,QAAS,CACPuG,UAAWvG,EAAQuG,YAGrB,kBAACQ,GAAA,EAAD,CAAKC,KAAM,kBAAC,KAAD,MAAeC,MAAM,eAChC,kBAACF,GAAA,EAAD,CAAKC,KAAM,kBAAC,KAAD,MAAkBC,MAAM,oBACnC,kBAACF,GAAA,EAAD,CAAKC,KAAM,kBAAC,KAAD,MAAUC,MAAM,kB,UC3B7B7H,I,MAAYC,YAAW,CAC3B6H,OAAO,CACLC,WAAa,OACbC,YAAc,OACdC,aAAc,WA0BHC,OAvBf,WAAgB,IAAD,EACc9I,IAAnBG,EADK,EACLA,MAAOE,EADF,EACEA,QACTmB,EAAUZ,KAChB,OACE,kBAACf,EAAWkJ,SAAZ,CAAqBd,MAAO,CAAE9H,QAAOE,YACrC,kBAAC2I,GAAA,EAAD,CACCC,WAAS,EACTC,UAAU,SACV7H,QAAS,EACT8H,QAAQ,eACR9E,WAAW,WAEZ,kBAAC2E,GAAA,EAAD,CAAMI,MAAI,EAACC,IAAE,GAAb,IAAe,kBAAC,EAAD,OACf,kBAACL,GAAA,EAAD,CAAMI,MAAI,EAACC,IAAE,GAAb,KAAgB,kBAAChC,GAAD,OAChB,kBAAC2B,GAAA,EAAD,CAAMI,MAAI,EAACC,IAAE,GAAb,KAAgB,kBAAChC,GAAD,OAChB,kBAAC2B,GAAA,EAAD,CAAMI,MAAI,EAACC,IAAE,GAAb,KAAgB,kBAAChC,GAAD,OACd,kBAAC2B,GAAA,EAAD,CAAM7G,UAAaX,EAAQkH,QAA3B,IAAoC,kBAAC,GAAD,UCvBtBhD,QACW,cAA7B4D,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.0cb09c9f.chunk.js","sourcesContent":["import React,{ useState, useMemo, useContext } from 'react'\r\n\r\n\r\nconst AppContext = React.createContext({})\r\n/**\r\n * Our custom React hook to manage state\r\n */\r\n\r\n\r\nconst useAppState = () => {\r\n  const initialState = { loginStatus: false }\r\n\r\n  // Manage the state using React.useState()\r\n  const [state, setState] = useState(initialState)\r\n\r\n  // Build our actions. We'll use useMemo() as an optimization,\r\n  // so this will only ever be called once.\r\n  const actions = useMemo(() => getActions(setState), [setState])\r\n\r\n  return { state, actions }\r\n}\r\n\r\n// Define your actions as functions that call setState().\r\n// It's a bit like Redux's dispatch(), but as individual\r\n// functions.\r\nconst getActions = setState => ({\r\n  login: () => {\r\n    setState(state => ({ ...state, loginStatus: true }))\r\n  },\r\n  logout: () => {\r\n    setState(state => ({ ...state, loginStatus: false }))\r\n  }\r\n})\r\n\r\n\r\n// Sub-components can use this function. It will pick up the\r\n// `state` and `actions` given by useAppState() higher in the\r\n// component tree.\r\nconst useAppContext = () => {\r\n    return useContext(AppContext)\r\n  }\r\n\r\nexport { AppContext, useAppState, useAppContext }","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {List ,ListItem, ListItemIcon, ListItemText, SwipeableDrawer, IconButton} from '@material-ui/core';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { useAppContext } from '../../StateManagement/useAppState';\r\nimport SideBarMenu from '../../Resources/SideBarMenu.json'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    list: {\r\n        width: 250,\r\n      },\r\n      hide: {\r\n        display: 'none',\r\n      },\r\n      menuButton: {\r\n        marginRight: theme.spacing(2),\r\n      },\r\n}))\r\n\r\n\r\nconst Sidedrawer = (props)=>{\r\n    const classes = useStyles();\r\n\r\n    const [state, setState] = React.useState({\r\n        isOpen : false\r\n      });\r\n    const loginStatus = useAppContext().state.loginStatus\r\n\r\n    \r\n      const toggleDrawer = (isOpen) => event => {\r\n        if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n          return;\r\n        }\r\n        setState({ ...state, isOpen: isOpen });\r\n      };\r\n\r\n      const sideList = () => (\r\n        <div\r\n          className={classes.list}\r\n          role=\"presentation\"\r\n          onClick={toggleDrawer(false)}\r\n          onKeyDown={toggleDrawer(false)}\r\n        >\r\n          <List>\r\n            {(loginStatus?SideBarMenu.LoggedIn:SideBarMenu.LoggedOut).map((text, index) => (\r\n              <ListItem button key={text}>\r\n                <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n                <ListItemText primary={text} />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </div>\r\n      );\r\n\r\n      return (\r\n          <div>\r\n        <IconButton\r\n        color=\"inherit\"\r\n        aria-label=\"open drawer\"\r\n        onClick={toggleDrawer(true)}\r\n        edge=\"start\"\r\n        className={clsx(classes.menuButton, state.isOpen && classes.hide)}\r\n        ><MenuIcon /></IconButton>\r\n        <SwipeableDrawer\r\n        open={state.isOpen}\r\n        onClose={toggleDrawer(false)}\r\n        onOpen={toggleDrawer(true)}\r\n      >\r\n        {sideList()}\r\n      </SwipeableDrawer>\r\n      </div>\r\n      )\r\n}\r\n\r\nexport default Sidedrawer;","import React from 'react';\r\nimport { makeStyles, fade } from '@material-ui/core/styles';\r\nimport { InputBase  } from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    search: {\r\n      position: 'relative',\r\n      marginLeft: 0,\r\n      left:'60%',\r\n      borderRadius: theme.shape.borderRadius,\r\n      backgroundColor: fade(theme.palette.common.white, 0.15),\r\n      '&:hover': {\r\n        backgroundColor: fade(theme.palette.common.white, 0.25),\r\n      }\r\n    },\r\n      searchIcon: {\r\n        width: theme.spacing(7),\r\n        height: '100%',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n      },\r\n      inputRoot: {\r\n        color: 'inherit',\r\n      },\r\n      inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 7),\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n          width: 120,\r\n          '&:focus': {\r\n            width: 200,\r\n          },\r\n        }\r\n      }\r\n  }));\r\n\r\nconst Searchbox = ()=>{\r\n    const classes = useStyles();\r\n    return (<div className={classes.search}>\r\n    <div className={classes.searchIcon}>\r\n      <SearchIcon />\r\n    </div>\r\n    <InputBase\r\n      placeholder=\"Search…\"\r\n      classes={{\r\n        root: classes.inputRoot,\r\n        input: classes.inputInput,\r\n      }}\r\n      inputProps={{ 'aria-label': 'search' }}\r\n    />\r\n  </div>)\r\n}\r\n\r\nexport default Searchbox;","import React from 'react';\r\nimport { makeStyles  } from '@material-ui/core/styles';\r\nimport { Button, IconButton, Menu, MenuItem  } from '@material-ui/core';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\n\r\nimport { useAppContext } from '../../StateManagement/useAppState'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    login: {\r\n      position : 'absolute',\r\n      left: '93%'\r\n    },\r\n  }));\r\n\r\nconst Login = (props)=>{\r\n    const classes = useStyles();\r\n    const menuId = 'primary-search-account-menu';\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const isMenuOpen = Boolean(anchorEl);\r\n    const {state,actions} = useAppContext();\r\n\r\n    function handleProfileMenuOpen(event) {\r\n        setAnchorEl(event.currentTarget);\r\n      }\r\n      \r\n      function handleMenuClose() {\r\n        setAnchorEl(null);\r\n        actions.logout()\r\n      }\r\n\r\n      const renderMenu = ()=> {\r\n        return(\r\n        <Menu\r\n          anchorEl={anchorEl}\r\n          anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n          id={menuId}\r\n          keepMounted\r\n          transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n          open={isMenuOpen}\r\n          onClose={handleMenuClose}\r\n        >\r\n          <MenuItem onClick={handleMenuClose}>Logout</MenuItem>\r\n        </Menu>)\r\n      };\r\n      \r\n\r\n    return <div className={classes.login}>\r\n        {!state.loginStatus?\r\n        <Button color=\"inherit\" onClick={actions.login}>Login</Button>:\r\n        <div>\r\n          <IconButton\r\n              edge=\"end\"\r\n              aria-label=\"account of current user\"\r\n              aria-controls={menuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleProfileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n            <AccountCircle />\r\n            </IconButton>\r\n            {renderMenu()}\r\n        </div>}\r\n    </div>\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\n// import { makeStyles  } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Toolbar } from '@material-ui/core';\r\n\r\nimport SideDrawer from './HeaderComponents/sideDrawer'\r\nimport SearchBox from './HeaderComponents/searchBox'\r\nimport Login from './HeaderComponents/login'\r\n\r\n// const useStyles = makeStyles(theme => ({\r\n  \r\n// }));\r\n\r\nconst Header = (props)=>{\r\n// const classes = useStyles();\r\nreturn <AppBar position = 'relative'>\r\n          <Toolbar>\r\n          <SideDrawer />\r\n          <Typography variant=\"h4\" >\r\n            ProjectX\r\n          </Typography>\r\n          <SearchBox />\r\n          <Login />\r\n          </Toolbar>\r\n        </AppBar>\r\n}\r\nexport default Header","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Card ,Typography, CardActions ,CardContent ,Button } from '@material-ui/core';\r\nconst useStyles = makeStyles({\r\n    card: {\r\n      minWidth: 275 \r\n       },\r\n    bullet: {\r\n      display: 'inline-block',\r\n      margin: '0 2px',\r\n      transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n      fontSize: 14,\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n  });\r\n\r\nexport default function Bodycomp (props){\r\n    const classes = useStyles();\r\n    const bull = <span className={classes.bullet}>•</span>;\r\n    return (\r\n        <Card className={classes.card}>\r\n          <CardContent>\r\n            <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n              Word of the Day\r\n            </Typography>\r\n            <Typography variant=\"h5\" component=\"h2\">\r\n              be\r\n              {bull}\r\n              nev\r\n              {bull}o{bull}\r\n              lent\r\n            </Typography>\r\n            <Typography className={classes.pos} color=\"textSecondary\">\r\n              adjective\r\n            </Typography>\r\n            <Typography variant=\"body2\" component=\"p\">\r\n              well meaning and kindly.\r\n              <br />\r\n              {'\"a benevolent smile\"'}\r\n            </Typography>\r\n          </CardContent>\r\n          <CardActions>\r\n            <Button size=\"small\">Learn More</Button>\r\n          </CardActions>\r\n        </Card>\r\n      );\r\n}","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PhoneIcon from '@material-ui/icons/Phone';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport Link from '@material-ui/icons/Link';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    flexGrow: 1,\r\n    maxWidth: 500,\r\n  },\r\n  indicator: {\r\n    backgroundColor: 'green',\r\n  }\r\n});\r\n\r\nconst Footer = (props)=>{\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  function handleChange(event, newValue) {\r\n    setValue(newValue);\r\n  }\r\n    return (<AppBar position = 'static'>\r\n    <Tabs\r\n        value={value}\r\n        onChange={handleChange}\r\n        variant=\"fullWidth\"\r\n        aria-label=\"icon label tabs example\"\r\n        textColor = \"inherit\"\r\n        classes={{\r\n          indicator: classes.indicator\r\n        }}\r\n      >\r\n        <Tab icon={<PhoneIcon />} label=\"CONTACT US\" />\r\n        <Tab icon={<FavoriteIcon />} label=\"Visit Us on SMS\" />\r\n        <Tab icon={<Link />} label=\"QuickLinks\" />\r\n      </Tabs>\r\n    </AppBar>\r\n     )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\nimport Header from './Components/header'\nimport Bodycomp from './Components/body'\nimport Footer from './Components/footer'\nimport { AppContext, useAppState } from './StateManagement/useAppState'\n\nimport {Grid} from '@material-ui/core';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nimport './App.css';\nconst useStyles = makeStyles({\n  footer:{\n    paddingTop : \"12px\",\n    paddingLeft : \"12px\",\n    paddingRight: \"12px\",\n  }\n})\nfunction App() {\n  const { state, actions } = useAppState()\n  const classes = useStyles();\n  return (\n    <AppContext.Provider value={{ state, actions }}>\n    <Grid\n     container\n     direction=\"column\"\n     spacing={3}\n     justify=\"space-evenly\"\n     alignItems=\"stretch\"\n    >\n    <Grid item xs> <Header /></Grid>\n    <Grid item xs>  <Bodycomp /></Grid>\n    <Grid item xs>  <Bodycomp /></Grid>\n    <Grid item xs>  <Bodycomp /></Grid>\n      <Grid className = {classes.footer}> <Footer /></Grid>\n     </Grid>\n     </AppContext.Provider>\n     );\n     \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}